Optional

Polymorphism.

compareTo

Collections.max(marche.getMarchesTaux(), Comparator.comparing(mt -> mt.getDateTaux()));
bean.os.sort((o1, o2) -> o1.dateOs.compareTo(o2.dateOs));

equals and hashcode ??
reflexion

generic type :::: a must


exception with walk files

race conditions


In Java 8, you can either use Arrays.stream or Stream.of to convert an Array into a Stream.
List<String> list = Arrays.asList("one", "two", "three");
List<String> list = Stream.of("one", "two", "three").collect(Collectors.toList());


why ?? -> throws IOException

OneToOne ?? FK as PK too ??

lamda and functional !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


// concat -> Expressions.stringTemplate()

private boolean methodName(int variant,int... args)
Stream.of("val1", "val2", "val3").anyMatch(str::equalsIgnoreCase

public static int checkElementIndex(
      int index, int size, @Nullable String desc)
      
enums too !!!


////